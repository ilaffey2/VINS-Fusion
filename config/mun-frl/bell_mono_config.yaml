%YAML:1.0

imu: 1
num_of_cam: 1

#common parameters
imu_topic: "/imu/data"
image0_topic: "/front_camera/image_mono"
output_path: "~/output/"

#camera calibration
cam0_calib: "bell_front_camera.yaml"

# Extrinsic parameter between IMU and camera.
estimate_extrinsic: 0 # 0 Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -0.04200713, -0.01166497,  0.99904921,  0.17666233,
            0.99899047,  0.01544242,  0.04218496, -0.05171531,
           -0.01591983,  0.99981271,  0.01100451, -0.04656282,
            0.0,         0.0,         0.0,         1.0]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
# fisheye: 1              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. 
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     
acc_w: 0.00004       # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001        # gyroscope bias random work noise standard deviation.     
g_norm: 9.803        # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/config/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0